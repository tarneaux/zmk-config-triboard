// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣷⡄⠀⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⣿⣿⡄⠀⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⣴⣿⣿⣿⣿⣿⣆⠀⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⣿⣿⣿⣦⠀⠀⠀⠀⠀
// ⠀⠀⠀⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀
// ⠀⠀⠀⠀⠈⠉⠉⠉⠛⠻⢿⣿⣿⣿⣿⣿⣷⡀⠀⠀
// ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠛⢿⣿⣿⣿⣷⡄⠀
// ⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⢿⣿⣿⡄
// ⠀⢀⣴⣾⣿⣿⣿⣷⣦⣄⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉
// ⣰⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣦⣀⠀⠀⠀⠀⠀⠀⠀

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include "helper.h"
#include "keys_fr.h"

#define BASE 0
#define SYM 1
#define NAV 2
#define ADJ 3

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "hold-preferred";
  tapping-term-ms = <170>;
};

// Urob's timeless home row mods: see https://github.com/urob/zmk-config#timeless-homerow-mods
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define KEYS_THUMBS 32 33 34 35 36 37

/* left-hand HRMs */
ZMK_BEHAVIOR(hml, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>; // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R KEYS_THUMBS>;
    hold-trigger-on-release; // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_BEHAVIOR(hmr, hold_tap,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>; // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L KEYS_THUMBS>;
    hold-trigger-on-release; // delay positional check until key-release
)

/* long press to prevent clearing bluetooth bond accidentally */
ZMK_BEHAVIOR(tdbtclr, tap_dance,
    tapping-term-ms = <300>;
    bindings = <&none>, <&none>, <&none>, <&none>, <&bt BT_CLR>;
)

&lt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "hold-preferred";
  tapping-term-ms = <170>;
};

// Keep the US keyboard's shift behaviors on the french virtual layout

ZMK_BEHAVIOR(comma_lt, mod_morph,
    mods = <(MOD_LSFT | MOD_RSFT)>;
    bindings = <&kp FR_COMMA>, <&kp FR_LT>;
)
ZMK_BEHAVIOR(dot_gt, mod_morph,
    mods = <(MOD_LSFT | MOD_RSFT)>;
    bindings = <&kp FR_DOT>, <&kp FR_GT>;
)
ZMK_BEHAVIOR(slash_question, mod_morph,
    mods = <(MOD_LSFT | MOD_RSFT)>;
    bindings = <&kp FR_FSLH>, <&kp FR_QUESTION>;
)
ZMK_BEHAVIOR(semicolon_colon, mod_morph,
    mods = <(MOD_LSFT | MOD_RSFT)>;
    bindings = <&kp FR_SEMI>, <&kp FR_COLON>;
)

// Allow capital french letters (ç, é, è, à, ù) to be typed with a single key press
// To type a capital letter, toggle the caps lock key and press the key again
// Let's start by defining a macro for each of these capital letters
ZMK_BEHAVIOR(capitalized, macro_one_param,
    bindings =
        <&macro_tap &kp CAPSLOCK>,
        <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER>,
        <&macro_tap &kp CAPSLOCK>;
)

#define CAPITALIZABLE(name, kc) ZMK_BEHAVIOR(name, tap_dance, \
    tapping-term-ms = <300>; \
    bindings = <&kp kc>, <&capitalized kc>; \
)

CAPITALIZABLE(c_cedilla, FR_C_CEDILLA)
CAPITALIZABLE(e_acute, FR_E_ACUTE)
CAPITALIZABLE(e_grave, FR_E_GRAVE)
CAPITALIZABLE(a_grave, FR_A_GRAVE)
CAPITALIZABLE(u_grave, FR_U_GRAVE)

/ {
    keymap {
        compatible = "zmk,keymap";
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            label= "BASE";
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
// ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
// ┃     Q     ┃     W     ┃     F     ┃     P     ┃     B     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
// ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
// ┃     Z     ┃     X     ┃     C     ┃     G     ┃     V     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┛
//                         ┃           ┃    TAB    ┃    SPC    ┃   ┃    BSPC   ┃    ENT    ┃           ┃
//                         ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
             bindings = <
     &kp FR_Q        &kp FR_W       &kp FR_F    &kp FR_P    &kp FR_B        &kp FR_J    &kp FR_L    &kp FR_U       &kp FR_Y       &semicolon_colon
     &hml LCTRL FR_A &hml LGUI FR_R &kp FR_S    &kp FR_T    &kp FR_D        &kp FR_H    &kp FR_N    &kp FR_E       &hmr LGUI FR_I &hmr LCTRL FR_O
     &kp FR_Z        &kp FR_X       &kp FR_C    &kp FR_G    &kp FR_V        &kp FR_K    &kp FR_M    &comma_lt      &dot_gt        &slash_question
                                    &none   &mt LSHFT TAB   &lt SYM SPACE   &kp BSPC    &lt NAV RET &none
                        >;
        };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


        sym_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            label= "SYM";
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃    ESC    ┃     @     ┃     &     ┃     $     ┃     %     ┃   ┃ ^ (alone) ┃     =     ┃     +     ┃     é     ┃     è     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     #     ┃     (     ┃     {     ┃     [     ┃     -     ┃   ┃     \     ┃     ]     ┃     }     ┃     )     ┃     |     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     ç     ┃     *     ┃     '     ┃     "     ┃     _     ┃   ┃     `     ┃     ~     ┃     !     ┃     à     ┃  ^ (dead) ┃
//             ┗━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
             bindings = <
    &kp ESC            &kp FR_AT_SIGN    &kp FR_AMPERSAND &kp FR_DOLLAR &kp FR_PERCENT        &kp FR_CARET &kp FR_EQUAL  &kp FR_PLUS  &e_acute          &e_grave
    &hml LCTRL FR_HASH &hml LGUI FR_LPAR &kp FR_LBRC      &kp FR_LBKT   &kp FR_MINUS          &kp FR_BSLH  &kp FR_RBKT   &kp FR_RBRC  &hml LGUI FR_RPAR &hml LCTRL FR_PIPE
    &c_cedilla         &kp FR_ASTERISK   &kp FR_SQT       &kp FR_DQT    &kp FR_UNDERSCORE     &kp FR_GRAVE &kp FR_TILDE  &kp FR_EXCL  &a_grave          &kp FR_CIRCUMFLEX
                                        &trans           &trans         &trans                &kp DEL      &trans     &trans
                        >;
        };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


        nav_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            label= "NAV";
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓                          ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     1     ┃     2     ┃     3     ┃     4     ┃     5     ┃                          ┃     6     ┃     7     ┃     8     ┃     9     ┃     0     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                          ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃   CTRL    ┃    GUI    ┃    ◂◂     ┃     ▸▸    ┃     ·     ┃                          ┃   CTRL    ┃     ←     ┃     ↑     ┃     →     ┃     ↓     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                          ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     ù     ┃          ┃          ┃    ▸▮▮    ┃     €     ┃                          ┃    GUI    ┃     ⇤     ┃    PDN    ┃    PUP    ┃     ⇥     ┃
//             ┗━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫                          ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃           ┃                          ┃           ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛                          ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
             bindings = <
                &kp FR_N1      &kp FR_N2            &kp FR_N3          &kp FR_N4   &kp FR_N5             &kp FR_N6   &kp FR_N7   &kp FR_N8   &kp FR_N9   &kp FR_N0
                &kp LCTRL      &kp LGUI             &kp C_PREVIOUS     &kp C_NEXT  &kp FR_MIDDLE_DOT     &kp LCTRL   &kp LEFT    &kp UP      &kp DOWN    &kp RIGHT
                &u_grave       &kp C_VOLUME_DOWN    &kp C_VOLUME_UP    &kp C_PP    &kp FR_EURO           &kp LGUI    &kp HOME    &kp PG_UP   &kp PG_DN   &kp END
                                                    &trans             &trans      &mo ADJ               &trans      &trans      &trans
                        >;
        };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄


        adjust_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
            label= "ADJ";
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃   RESET   ┃ OUT TOG   ┃ BT CLEAR  ┃           ┃           ┃   ┃           ┃    F7     ┃    F8     ┃    F9     ┃    F12    ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃ BOOTLOAD  ┃ BT 0      ┃ CTRL      ┃ GUI       ┃           ┃   ┃           ┃    F4     ┃    F5     ┃    F6     ┃    F11    ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃           ┃ BT 1      ┃ BT 2      ┃ ALT       ┃           ┃   ┃           ┃    F1     ┃    F2     ┃    F3     ┃    F10    ┃
//             ┗━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃           ┃           ┃           ┃   ┃           ┃           ┃           ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
             bindings = <

                &sys_reset  &out OUT_TOG  &tdbtclr     &trans      &trans          &trans      &kp F7      &kp F8      &kp F9      &kp F12
                &bootloader &bt BT_SEL 0  &kp LCTRL    &kp LGUI    &trans          &trans      &kp F4      &kp F5      &kp F6      &kp F11  
                &trans      &bt BT_SEL 1  &bt BT_SEL 2 &kp LALT    &trans          &trans      &kp F1      &kp F2      &kp F3      &kp F10 
                                          &trans       &trans      &trans          &trans      &trans      &trans      
                        >;
        };
    };
};
